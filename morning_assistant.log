2024-01-13 09:17:06,431 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 09:17:06,442 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 09:28:59,696 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 09:28:59,697 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 10:39:35,924 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 10:39:35,925 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 10:39:53,341 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 10:39:53,342 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 10:52:42,086 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 10:52:42,088 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 10:56:45,941 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 10:56:45,942 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 11:04:09,574 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 11:04:09,583 - httpx - DEBUG - JK - load_verify_locations cafile='C:\\Users\\johan\\.conda\\envs\\ds\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 11:05:58,445 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 11:05:58,447 - httpx - DEBUG - JK - load_verify_locations cafile='C:\\Users\\johan\\.conda\\envs\\ds\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 11:06:44,396 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 11:06:44,398 - httpx - DEBUG - JK - load_verify_locations cafile='C:\\Users\\johan\\.conda\\envs\\ds\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 11:11:04,867 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 11:11:04,869 - httpx - DEBUG - JK - load_verify_locations cafile='C:\\Users\\johan\\.conda\\envs\\ds\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 11:20:22,043 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 11:20:22,044 - httpx - DEBUG - JK - load_verify_locations cafile='C:\\Users\\johan\\.conda\\envs\\ds\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 11:21:12,226 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 11:21:12,228 - httpx - DEBUG - JK - load_verify_locations cafile='C:\\Users\\johan\\.conda\\envs\\ds\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 11:33:30,607 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 11:33:30,609 - httpx - DEBUG - JK - load_verify_locations cafile='C:\\Users\\johan\\.conda\\envs\\ds\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 11:34:15,739 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 11:34:15,741 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 11:37:11,832 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 11:37:11,834 - httpx - DEBUG - JK - load_verify_locations cafile='C:\\Users\\johan\\.conda\\envs\\ds\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 11:40:17,683 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 11:40:17,685 - httpx - DEBUG - JK - load_verify_locations cafile='C:\\Users\\johan\\.conda\\envs\\ds\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 11:41:46,753 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 11:41:46,755 - httpx - DEBUG - JK - load_verify_locations cafile='C:\\Users\\johan\\.conda\\envs\\ds\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 11:43:02,271 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 11:43:02,273 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 15:16:03,812 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 15:16:03,825 - httpx - DEBUG - JK - load_verify_locations cafile='C:\\Users\\johan\\.conda\\envs\\ds\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 15:19:41,891 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 15:19:41,893 - httpx - DEBUG - JK - load_verify_locations cafile='C:\\Users\\johan\\.conda\\envs\\ds\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 16:17:41,921 - methods.openai_functions - ERROR - JK - mapping values are not allowed here
  in "C:\Users\johan\Meine Ablage\python\morning_assistant\resources.yml", line 2, column 112
2024-01-13 16:17:41,933 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 16:17:41,935 - httpx - DEBUG - JK - load_verify_locations cafile='C:\\Users\\johan\\.conda\\envs\\ds\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 16:22:43,574 - methods.openai_functions - ERROR - JK - while scanning a simple key
  in "C:\Users\johan\Meine Ablage\python\morning_assistant\resources.yml", line 6, column 5
could not find expected ':'
  in "C:\Users\johan\Meine Ablage\python\morning_assistant\resources.yml", line 8, column 5
2024-01-13 16:22:43,586 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 16:22:43,588 - httpx - DEBUG - JK - load_verify_locations cafile='C:\\Users\\johan\\.conda\\envs\\ds\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 16:23:23,680 - methods.openai_functions - ERROR - JK - while scanning a simple key
  in "C:\Users\johan\Meine Ablage\python\morning_assistant\resources.yml", line 6, column 5
could not find expected ':'
  in "C:\Users\johan\Meine Ablage\python\morning_assistant\resources.yml", line 8, column 5
2024-01-13 16:23:23,692 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 16:23:23,694 - httpx - DEBUG - JK - load_verify_locations cafile='C:\\Users\\johan\\.conda\\envs\\ds\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 16:24:55,768 - methods.openai_functions - ERROR - JK - while scanning a simple key
  in "C:\Users\johan\Meine Ablage\python\morning_assistant\resources.yml", line 6, column 5
could not find expected ':'
  in "C:\Users\johan\Meine Ablage\python\morning_assistant\resources.yml", line 8, column 5
2024-01-13 16:29:21,712 - methods.openai_functions - ERROR - JK - while scanning a simple key
  in "resources.yml", line 6, column 5
could not find expected ':'
  in "resources.yml", line 8, column 5
2024-01-13 16:29:21,724 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 16:29:21,726 - httpx - DEBUG - JK - load_verify_locations cafile='C:\\Users\\johan\\.conda\\envs\\ds\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 16:33:31,344 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 16:33:31,347 - httpx - DEBUG - JK - load_verify_locations cafile='C:\\Users\\johan\\.conda\\envs\\ds\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 16:36:18,793 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 16:36:18,795 - httpx - DEBUG - JK - load_verify_locations cafile='C:\\Users\\johan\\.conda\\envs\\ds\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 16:52:33,791 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 16:52:33,794 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 16:59:03,378 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 16:59:03,380 - httpx - DEBUG - JK - load_verify_locations cafile='C:\\Users\\johan\\.conda\\envs\\ds\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 17:00:52,435 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 17:00:52,437 - httpx - DEBUG - JK - load_verify_locations cafile='C:\\Users\\johan\\.conda\\envs\\ds\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 17:04:53,969 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 17:04:53,970 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 17:04:53,985 - openai._base_client - DEBUG - JK - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You're a personal assistant and you awake your user with a morning briefing. You adhere strictly to the data you're provided"}, {'role': 'user', 'content': 'As a personal assistant, create a morning briefing for my user. Here are the details:\n\n# user_name\nMax\n\n# personal_calendar_today\n[{\'title\': \'Doctor\', \'location\': \'Castra Regina Center\', \'start\': 960, \'end\': 1050}]\n\n# professional_calendar_today\n[{\'title\': \'Scrum meeting\', \'location\': \'Teams\', \'start\': \'09:00\', \'end\': \'09:30\'}, {\'title\': \'Lunch with CEO\', \'location\': \'Canteen\', \'start\': 780, \'end\': 1080}]\n\n# notes_previous_days\n- ## Private\n  - I slept well\n  - I talked to my mother about window cleaning robots. I want to by one for her.\n- ## Work\n  - I had a good meeting with my team.\n  - I had a good meeting with my boss.\n\n\n# date_for_summary\n2024-01-13\n\n\n\nPlease create a morning briefing that includes:\n1. A respectful greeting.\n2. An overview of the day\'s appointments, starting slowly for the user who just woke up.\n3. Detailed presentation of appointments from both calendars, including times, locations, and notes.\n4. Explanation of any appointment collisions and the time available between appointments.\n5. A concise summary of the diary entries, highlighting the core ideas but not going into too much detail.\n\nDon\'t give any ratings, for example "examples, which could be handy for future reference" instead of "examples, which sould be very handy for your future work". Also, do not claim that something should be helpful for the user\'s work, but say that something could be helpful.\n\n# Example for your answer\nGood morning, John! I hope you\'re feeling refreshed. Let\'s look at your schedule for today:\n\nYou have a work appointment at the office this morning and again this afternoon. Between these appointments, you are in town at lunchtime to see a doctor, but there is a time window of two and one hour respectively between the appointments for the journey.\n\nIn detail, your professional Appointments:\n- You have a Team Meeting from 09:00 to 10:00 at the Office in Room 402. Remember, the focus is on discussing quarterly goals, as you noted on the date.\n- Later, there\'s a Client Call scheduled from 14:00 to 15:00. It\'s a virtual meeting to review the project timeline.\n\nAnd the private Appointments:\n- Also, you have a Dentist appointment at the Downtown Clinic from 12:00 to 13:00 for a routine check-up.\n\nNo overlapping appointments today, which is great! You have ample time between each.\n\nFrom your diary entries, I noticed you\'ve been learning about for loops in Python. You\'ve made some  progress with the examples. It\'s all in your notes for a quick review.\n\nThat\'s all for your briefing. Have a productive and smooth day!\n\n# Another example for your answer\nHello, Michael! It\'s time to start your day. Here\'s your agenda, but let\'s start with a brief overview.\n\nYou got 2 professional and 2 private appointments today: A meeting in the office is followed by a private one, folowed by another professional meeting and your day ends with another private appointment. There is free time between these dates, which you can also use for arrival and departure.\n\nIn your professional Calendar is\n- First up, your Team Meeting at the Office, Room 402, from 09:00 to 10:00. The agenda includes discussing quarterly goals.\n- Don\'t forget the Client Call from 14:00 to 15:00. It\'s online, focusing on the project timeline.\n\nAnd in the private one:\n- You have guitar lessons at Jeff\'s. It takes place downtown\n- And in the evening, from 19:00 to 22:00, you\'ll meet Anna at Luigies. Remember to bring flowers, as noted.\n\nLooks like you have a well-spaced schedule today, with no clashes between appointments.\n\nRegarding your diary, I see that yesterday you worked on understanding for loops in Python. You\'ve noted down some key points and source code examples, which could be handy for future reference.\n\nWishing you a fantastic day ahead with your tasks!\n\n\nLet\'s go! Formulate a moring briefing for the provided user and user data.\n'}], 'model': 'gpt-4', 'temperature': 0.1}}
2024-01-13 17:04:53,986 - httpcore.connection - DEBUG - JK - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-01-13 17:04:54,024 - httpcore.connection - DEBUG - JK - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000014E0EB91280>
2024-01-13 17:04:54,024 - httpcore.connection - DEBUG - JK - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000014E0EB33740> server_hostname='api.openai.com' timeout=5.0
2024-01-13 17:04:54,056 - httpcore.connection - DEBUG - JK - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000014E0EB91250>
2024-01-13 17:04:54,056 - httpcore.http11 - DEBUG - JK - send_request_headers.started request=<Request [b'POST']>
2024-01-13 17:04:54,057 - httpcore.http11 - DEBUG - JK - send_request_headers.complete
2024-01-13 17:04:54,057 - httpcore.http11 - DEBUG - JK - send_request_body.started request=<Request [b'POST']>
2024-01-13 17:04:54,057 - httpcore.http11 - DEBUG - JK - send_request_body.complete
2024-01-13 17:04:54,057 - httpcore.http11 - DEBUG - JK - receive_response_headers.started request=<Request [b'POST']>
2024-01-13 17:05:18,624 - httpcore.http11 - DEBUG - JK - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 13 Jan 2024 16:05:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-4-0613'), (b'openai-organization', b'user-jgbodxbnwzwjnova0pidckzt'), (b'openai-processing-ms', b'23512'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'38987'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'1.519s'), (b'x-request-id', b'fdf55ab0e148994e01817fb500f12c91'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=cquM_ERvEhU7y2MCxW9aWs_mkyauJdy4GSyRX0T6k0s-1705161920-1-Aan8dvd3CS/dqiaD1KdOV5KkATz8ojFV/W2vOH4zTo8iWqiK87o0T9irBXWfiRaLYvAep4tfO7zAFlCULruzsLM=; path=/; expires=Sat, 13-Jan-24 16:35:20 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=umar5zsJJyGLuefiiQJ3lBkxA7p6R3BOaMbSRLq.3vA-1705161920339-0-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'844ee0bbfbc065bd-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-01-13 17:05:18,624 - httpx - INFO - JK - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-01-13 17:05:18,627 - httpcore.http11 - DEBUG - JK - receive_response_body.started request=<Request [b'POST']>
2024-01-13 17:05:18,628 - httpcore.http11 - DEBUG - JK - receive_response_body.complete
2024-01-13 17:05:18,628 - httpcore.http11 - DEBUG - JK - response_closed.started
2024-01-13 17:05:18,628 - httpcore.http11 - DEBUG - JK - response_closed.complete
2024-01-13 17:05:18,628 - openai._base_client - DEBUG - JK - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-01-13 17:05:18,631 - methods.openai_functions - INFO - JK - Token usage: gpt-4-0613, CompletionUsage(completion_tokens=350, prompt_tokens=935, total_tokens=1285)
2024-01-13 17:05:18,696 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 17:05:18,696 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 17:05:18,709 - openai._base_client - DEBUG - JK - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You're a personal assistant and you awake your user with a morning briefing. You adhere strictly to the data you're provided"}, {'role': 'user', 'content': 'As a personal assistant, create a morning briefing for my user. Here are the details:\n\n# user_name\nMax\n\n# personal_calendar_today\n[{\'title\': \'Doctor\', \'location\': \'Castra Regina Center\', \'start\': 960, \'end\': 1050}]\n\n# professional_calendar_today\n[{\'title\': \'Scrum meeting\', \'location\': \'Teams\', \'start\': \'09:00\', \'end\': \'09:30\'}, {\'title\': \'Lunch with CEO\', \'location\': \'Canteen\', \'start\': 780, \'end\': 1080}]\n\n# notes_previous_days\n- ## Private\n  - I slept well\n  - I talked to my mother about window cleaning robots. I want to by one for her.\n- ## Work\n  - I had a good meeting with my team.\n  - I had a good meeting with my boss.\n\n\n# date_for_summary\n2024-01-13\n\n\n\nPlease create a morning briefing that includes:\n1. A respectful greeting.\n2. An overview of the day\'s appointments, starting slowly for the user who just woke up.\n3. Detailed presentation of appointments from both calendars, including times, locations, and notes.\n4. Explanation of any appointment collisions and the time available between appointments.\n5. A concise summary of the diary entries, highlighting the core ideas but not going into too much detail.\n\nDon\'t give any ratings, for example "examples, which could be handy for future reference" instead of "examples, which sould be very handy for your future work". Also, do not claim that something should be helpful for the user\'s work, but say that something could be helpful.\n\n# Example for your answer\nGood morning, John! I hope you\'re feeling refreshed. Let\'s look at your schedule for today:\n\nYou have a work appointment at the office this morning and again this afternoon. Between these appointments, you are in town at lunchtime to see a doctor, but there is a time window of two and one hour respectively between the appointments for the journey.\n\nIn detail, your professional Appointments:\n- You have a Team Meeting from 09:00 to 10:00 at the Office in Room 402. Remember, the focus is on discussing quarterly goals, as you noted on the date.\n- Later, there\'s a Client Call scheduled from 14:00 to 15:00. It\'s a virtual meeting to review the project timeline.\n\nAnd the private Appointments:\n- Also, you have a Dentist appointment at the Downtown Clinic from 12:00 to 13:00 for a routine check-up.\n\nNo overlapping appointments today, which is great! You have ample time between each.\n\nFrom your diary entries, I noticed you\'ve been learning about for loops in Python. You\'ve made some  progress with the examples. It\'s all in your notes for a quick review.\n\nThat\'s all for your briefing. Have a productive and smooth day!\n\n# Another example for your answer\nHello, Michael! It\'s time to start your day. Here\'s your agenda, but let\'s start with a brief overview.\n\nYou got 2 professional and 2 private appointments today: A meeting in the office is followed by a private one, folowed by another professional meeting and your day ends with another private appointment. There is free time between these dates, which you can also use for arrival and departure.\n\nIn your professional Calendar is\n- First up, your Team Meeting at the Office, Room 402, from 09:00 to 10:00. The agenda includes discussing quarterly goals.\n- Don\'t forget the Client Call from 14:00 to 15:00. It\'s online, focusing on the project timeline.\n\nAnd in the private one:\n- You have guitar lessons at Jeff\'s. It takes place downtown\n- And in the evening, from 19:00 to 22:00, you\'ll meet Anna at Luigies. Remember to bring flowers, as noted.\n\nLooks like you have a well-spaced schedule today, with no clashes between appointments.\n\nRegarding your diary, I see that yesterday you worked on understanding for loops in Python. You\'ve noted down some key points and source code examples, which could be handy for future reference.\n\nWishing you a fantastic day ahead with your tasks!\n\n\nLet\'s go! Formulate a moring briefing for the provided user and user data.\n'}], 'model': 'gpt-4', 'temperature': 0.1}}
2024-01-13 17:05:18,709 - httpcore.connection - DEBUG - JK - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-01-13 17:05:18,856 - httpcore.connection - DEBUG - JK - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000014E0EBE9190>
2024-01-13 17:05:18,857 - httpcore.connection - DEBUG - JK - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000014E0EB33B40> server_hostname='api.openai.com' timeout=5.0
2024-01-13 17:05:18,966 - httpcore.connection - DEBUG - JK - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000014E0EBE9160>
2024-01-13 17:05:18,966 - httpcore.http11 - DEBUG - JK - send_request_headers.started request=<Request [b'POST']>
2024-01-13 17:05:18,966 - httpcore.http11 - DEBUG - JK - send_request_headers.complete
2024-01-13 17:05:18,966 - httpcore.http11 - DEBUG - JK - send_request_body.started request=<Request [b'POST']>
2024-01-13 17:05:18,966 - httpcore.http11 - DEBUG - JK - send_request_body.complete
2024-01-13 17:05:18,967 - httpcore.http11 - DEBUG - JK - receive_response_headers.started request=<Request [b'POST']>
2024-01-13 17:05:41,552 - httpcore.http11 - DEBUG - JK - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 13 Jan 2024 16:05:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-4-0613'), (b'openai-organization', b'user-jgbodxbnwzwjnova0pidckzt'), (b'openai-processing-ms', b'22361'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'38987'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'1.519s'), (b'x-request-id', b'0d45fec67304aa3a3e5c8dc050bac1d5'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=jZan3Q57N_II_gym6pV8hEfoy1m9mvr_4ld7.nJqbe0-1705161943-1-AfXMDoXTFTNb1x7wuuwKSc1DjRLb6+p4srnzOB4xuysk4RZoHZK8UghQs4qPHmmP58+VX6JDimWGal+hVVX0VQc=; path=/; expires=Sat, 13-Jan-24 16:35:43 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=oXLQeodbL5VfgbcQbUxkc5tzw3gIqKlgvY44qP9anRw-1705161943783-0-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'844ee157ba3b1cad-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-01-13 17:05:41,552 - httpx - INFO - JK - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-01-13 17:05:41,553 - httpcore.http11 - DEBUG - JK - receive_response_body.started request=<Request [b'POST']>
2024-01-13 17:05:41,553 - httpcore.http11 - DEBUG - JK - receive_response_body.complete
2024-01-13 17:05:41,553 - httpcore.http11 - DEBUG - JK - response_closed.started
2024-01-13 17:05:41,553 - httpcore.http11 - DEBUG - JK - response_closed.complete
2024-01-13 17:05:41,553 - openai._base_client - DEBUG - JK - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-01-13 17:05:41,553 - methods.openai_functions - INFO - JK - Token usage: gpt-4-0613, CompletionUsage(completion_tokens=336, prompt_tokens=935, total_tokens=1271)
2024-01-13 17:05:41,605 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 17:05:41,605 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 17:05:41,618 - openai._base_client - DEBUG - JK - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You're a personal assistant and you awake your user with a morning briefing. You adhere strictly to the data you're provided"}, {'role': 'user', 'content': 'As a personal assistant, create a morning briefing for my user. Here are the details:\n\n# user_name\nMax\n\n# personal_calendar_today\n[{\'title\': \'Doctor\', \'location\': \'Castra Regina Center\', \'start\': 960, \'end\': 1050}]\n\n# professional_calendar_today\n[{\'title\': \'Scrum meeting\', \'location\': \'Teams\', \'start\': \'09:00\', \'end\': \'09:30\'}, {\'title\': \'Lunch with CEO\', \'location\': \'Canteen\', \'start\': 780, \'end\': 1080}]\n\n# notes_previous_days\n- ## Private\n  - I slept well\n  - I talked to my mother about window cleaning robots. I want to by one for her.\n- ## Work\n  - I had a good meeting with my team.\n  - I had a good meeting with my boss.\n\n\n# date_for_summary\n2024-01-13\n\n\n\nPlease create a morning briefing that includes:\n1. A respectful greeting.\n2. An overview of the day\'s appointments, starting slowly for the user who just woke up.\n3. Detailed presentation of appointments from both calendars, including times, locations, and notes.\n4. Explanation of any appointment collisions and the time available between appointments.\n5. A concise summary of the diary entries, highlighting the core ideas but not going into too much detail.\n\nDon\'t give any ratings, for example "examples, which could be handy for future reference" instead of "examples, which sould be very handy for your future work". Also, do not claim that something should be helpful for the user\'s work, but say that something could be helpful.\n\n# Example for your answer\nGood morning, John! I hope you\'re feeling refreshed. Let\'s look at your schedule for today:\n\nYou have a work appointment at the office this morning and again this afternoon. Between these appointments, you are in town at lunchtime to see a doctor, but there is a time window of two and one hour respectively between the appointments for the journey.\n\nIn detail, your professional Appointments:\n- You have a Team Meeting from 09:00 to 10:00 at the Office in Room 402. Remember, the focus is on discussing quarterly goals, as you noted on the date.\n- Later, there\'s a Client Call scheduled from 14:00 to 15:00. It\'s a virtual meeting to review the project timeline.\n\nAnd the private Appointments:\n- Also, you have a Dentist appointment at the Downtown Clinic from 12:00 to 13:00 for a routine check-up.\n\nNo overlapping appointments today, which is great! You have ample time between each.\n\nFrom your diary entries, I noticed you\'ve been learning about for loops in Python. You\'ve made some  progress with the examples. It\'s all in your notes for a quick review.\n\nThat\'s all for your briefing. Have a productive and smooth day!\n\n# Another example for your answer\nHello, Michael! It\'s time to start your day. Here\'s your agenda, but let\'s start with a brief overview.\n\nYou got 2 professional and 2 private appointments today: A meeting in the office is followed by a private one, folowed by another professional meeting and your day ends with another private appointment. There is free time between these dates, which you can also use for arrival and departure.\n\nIn your professional Calendar is\n- First up, your Team Meeting at the Office, Room 402, from 09:00 to 10:00. The agenda includes discussing quarterly goals.\n- Don\'t forget the Client Call from 14:00 to 15:00. It\'s online, focusing on the project timeline.\n\nAnd in the private one:\n- You have guitar lessons at Jeff\'s. It takes place downtown\n- And in the evening, from 19:00 to 22:00, you\'ll meet Anna at Luigies. Remember to bring flowers, as noted.\n\nLooks like you have a well-spaced schedule today, with no clashes between appointments.\n\nRegarding your diary, I see that yesterday you worked on understanding for loops in Python. You\'ve noted down some key points and source code examples, which could be handy for future reference.\n\nWishing you a fantastic day ahead with your tasks!\n\n\nLet\'s go! Formulate a moring briefing for the provided user and user data.\n'}], 'model': 'gpt-4', 'temperature': 0.1}}
2024-01-13 17:05:41,619 - httpcore.connection - DEBUG - JK - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-01-13 17:05:41,654 - httpcore.connection - DEBUG - JK - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000014E0EBFF970>
2024-01-13 17:05:41,655 - httpcore.connection - DEBUG - JK - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000014E0EB33BC0> server_hostname='api.openai.com' timeout=5.0
2024-01-13 17:05:41,678 - httpcore.connection - DEBUG - JK - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000014E0EBFF940>
2024-01-13 17:05:41,678 - httpcore.http11 - DEBUG - JK - send_request_headers.started request=<Request [b'POST']>
2024-01-13 17:05:41,678 - httpcore.http11 - DEBUG - JK - send_request_headers.complete
2024-01-13 17:05:41,678 - httpcore.http11 - DEBUG - JK - send_request_body.started request=<Request [b'POST']>
2024-01-13 17:05:41,679 - httpcore.http11 - DEBUG - JK - send_request_body.complete
2024-01-13 17:05:41,679 - httpcore.http11 - DEBUG - JK - receive_response_headers.started request=<Request [b'POST']>
2024-01-13 17:06:04,550 - httpcore.http11 - DEBUG - JK - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 13 Jan 2024 16:06:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-4-0613'), (b'openai-organization', b'user-jgbodxbnwzwjnova0pidckzt'), (b'openai-processing-ms', b'22653'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'38927'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'1.608s'), (b'x-request-id', b'd3968ad44d3d0909e34393a8ae185301'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=UmKmlwxcORJJYxHz9s8vKz4BfPwJsfittKKXjceS5lM-1705161966-1-Ac/yRDfQaOms8sAl07pZmFQrlAZb+p0XPhKEVHtwNTZzcc0ORDGJb7MO2qX5SV8fV8hExrQR5zKF4jnj4FuermY=; path=/; expires=Sat, 13-Jan-24 16:36:06 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=5I1aNqH_ZmY_FHp5kCwO_2G2RkgIg4LYqLKQyBhJ.wY-1705161966769-0-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'844ee1e5a97ebb49-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-01-13 17:06:04,551 - httpx - INFO - JK - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-01-13 17:06:04,551 - httpcore.http11 - DEBUG - JK - receive_response_body.started request=<Request [b'POST']>
2024-01-13 17:06:04,551 - httpcore.http11 - DEBUG - JK - receive_response_body.complete
2024-01-13 17:06:04,551 - httpcore.http11 - DEBUG - JK - response_closed.started
2024-01-13 17:06:04,551 - httpcore.http11 - DEBUG - JK - response_closed.complete
2024-01-13 17:06:04,551 - openai._base_client - DEBUG - JK - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-01-13 17:06:04,552 - methods.openai_functions - INFO - JK - Token usage: gpt-4-0613, CompletionUsage(completion_tokens=376, prompt_tokens=935, total_tokens=1311)
2024-01-13 17:12:52,599 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 17:12:52,600 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 17:12:52,612 - openai._base_client - DEBUG - JK - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You're a personal assistant and you awake your user with a morning briefing. You adhere strictly to the data you're provided"}, {'role': 'user', 'content': 'As a personal assistant, create a morning briefing for my user. Here are the details:\n\n# user_name\nMax\n\n# personal_calendar_today\n[{\'title\': \'Doctor\', \'location\': \'Castra Regina Center\', \'start\': 960, \'end\': 1050}]\n\n# professional_calendar_today\n[{\'title\': \'Scrum meeting\', \'location\': \'Teams\', \'start\': \'09:00\', \'end\': \'09:30\'}, {\'title\': \'Lunch with CEO\', \'location\': \'Canteen\', \'start\': 780, \'end\': 1080}]\n\n# notes_previous_days\n- ## Private\n  - I slept well\n  - I talked to my mother about window cleaning robots. I want to by one for her.\n- ## Work\n  - I had a good meeting with my team.\n  - I had a good meeting with my boss.\n\n\n# date_for_summary\n2024-01-13\n\n\n\nPlease create a morning briefing that includes:\n1. A respectful greeting.\n2. An overview of the day\'s appointments, starting slowly for the user who just woke up.\n3. Detailed presentation of appointments from both calendars, including times, locations, and notes.\n4. Explanation of any appointment collisions and the time available between appointments.\n5. A concise summary of the diary entries, highlighting the core ideas but not going into too much detail.\n\nDon\'t give any ratings, for example "examples, which could be handy for future reference" instead of "examples, which sould be very handy for your future work". Also, do not claim that something should be helpful for the user\'s work, but say that something could be helpful.\n\n# Example for your answer\nGood morning, John! I hope you\'re feeling refreshed. Let\'s look at your schedule for today:\n\nYou have a work appointment at the office this morning and again this afternoon. Between these appointments, you are in town at lunchtime to see a doctor, but there is a time window of two and one hour respectively between the appointments for the journey.\n\nIn detail, your professional Appointments:\n- You have a Team Meeting from 09:00 to 10:00 at the Office in Room 402. Remember, the focus is on discussing quarterly goals, as you noted on the date.\n- Later, there\'s a Client Call scheduled from 14:00 to 15:00. It\'s a virtual meeting to review the project timeline.\n\nAnd the private Appointments:\n- Also, you have a Dentist appointment at the Downtown Clinic from 12:00 to 13:00 for a routine check-up.\n\nNo overlapping appointments today, which is great! You have ample time between each.\n\nFrom your diary entries, I noticed you\'ve been learning about for loops in Python. You\'ve made some  progress with the examples. It\'s all in your notes for a quick review.\n\nThat\'s all for your briefing. Have a productive and smooth day!\n\n# Another example for your answer\nHello, Michael! It\'s time to start your day. Here\'s your agenda, but let\'s start with a brief overview.\n\nYou got 2 professional and 2 private appointments today: A meeting in the office is followed by a private one, folowed by another professional meeting and your day ends with another private appointment. There is free time between these dates, which you can also use for arrival and departure.\n\nIn your professional Calendar is\n- First up, your Team Meeting at the Office, Room 402, from 09:00 to 10:00. The agenda includes discussing quarterly goals.\n- Don\'t forget the Client Call from 14:00 to 15:00. It\'s online, focusing on the project timeline.\n\nAnd in the private one:\n- You have guitar lessons at Jeff\'s. It takes place downtown\n- And in the evening, from 19:00 to 22:00, you\'ll meet Anna at Luigies. Remember to bring flowers, as noted.\n\nLooks like you have a well-spaced schedule today, with no clashes between appointments.\n\nRegarding your diary, I see that yesterday you worked on understanding for loops in Python. You\'ve noted down some key points and source code examples, which could be handy for future reference.\n\nWishing you a fantastic day ahead with your tasks!\n\n\nLet\'s go! Formulate a moring briefing for the provided user and user data.\n'}], 'model': 'gpt-4', 'temperature': 0.1}}
2024-01-13 17:12:52,613 - httpcore.connection - DEBUG - JK - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-01-13 17:12:52,646 - httpcore.connection - DEBUG - JK - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000014E0EC14370>
2024-01-13 17:12:52,646 - httpcore.connection - DEBUG - JK - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000014E0EB33E40> server_hostname='api.openai.com' timeout=5.0
2024-01-13 17:12:52,668 - httpcore.connection - DEBUG - JK - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000014E0EC14340>
2024-01-13 17:12:52,668 - httpcore.http11 - DEBUG - JK - send_request_headers.started request=<Request [b'POST']>
2024-01-13 17:12:52,668 - httpcore.http11 - DEBUG - JK - send_request_headers.complete
2024-01-13 17:12:52,668 - httpcore.http11 - DEBUG - JK - send_request_body.started request=<Request [b'POST']>
2024-01-13 17:12:52,668 - httpcore.http11 - DEBUG - JK - send_request_body.complete
2024-01-13 17:12:52,668 - httpcore.http11 - DEBUG - JK - receive_response_headers.started request=<Request [b'POST']>
2024-01-13 17:13:10,715 - httpcore.http11 - DEBUG - JK - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 13 Jan 2024 16:13:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-4-0613'), (b'openai-organization', b'user-jgbodxbnwzwjnova0pidckzt'), (b'openai-processing-ms', b'17859'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'38987'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'1.519s'), (b'x-request-id', b'86566d1dd91bed8040bb6415519c9fb7'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=nK_T4Wag.L0j5lfWpopVTxdbj1A9XWADkNKmH1emuKs-1705162392-1-AQJ6ycnyYF2xjkTwsjMY7GJ1b5rY8hfEzpnqNSNLGRYwZEP/PN15zjoCT4W8z18+ugSb7TjL0bSwBtevai7b9og=; path=/; expires=Sat, 13-Jan-24 16:43:12 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=A0XQdAEy1vzhfFIkUr83D8CS0IowE.Lbh6OlPJg5Xzg-1705162392940-0-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'844eec6b2cfd193b-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-01-13 17:13:10,716 - httpx - INFO - JK - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-01-13 17:13:10,716 - httpcore.http11 - DEBUG - JK - receive_response_body.started request=<Request [b'POST']>
2024-01-13 17:13:10,716 - httpcore.http11 - DEBUG - JK - receive_response_body.complete
2024-01-13 17:13:10,716 - httpcore.http11 - DEBUG - JK - response_closed.started
2024-01-13 17:13:10,716 - httpcore.http11 - DEBUG - JK - response_closed.complete
2024-01-13 17:13:10,716 - openai._base_client - DEBUG - JK - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-01-13 17:13:10,717 - methods.openai_functions - INFO - JK - Token usage: gpt-4-0613, CompletionUsage(completion_tokens=318, prompt_tokens=935, total_tokens=1253)
2024-01-13 17:14:23,894 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 17:14:23,896 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 17:14:23,909 - openai._base_client - DEBUG - JK - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You're a personal assistant and you awake your user with a morning briefing. You adhere strictly to the data you're provided"}, {'role': 'user', 'content': 'As a personal assistant, create a morning briefing for my user. Here are the details:\n\n# user_name\nMax\n\n# personal_calendar_today\n[{\'title\': \'Doctor\', \'location\': \'Castra Regina Center\', \'start\': 960, \'end\': 1050}]\n\n# professional_calendar_today\n[{\'title\': \'Scrum meeting\', \'location\': \'Teams\', \'start\': \'09:00\', \'end\': \'09:30\'}, {\'title\': \'Lunch with CEO\', \'location\': \'Canteen\', \'start\': 780, \'end\': 1080}]\n\n# notes_previous_days\n- ## Private\n  - I slept well\n  - I talked to my mother about window cleaning robots. I want to by one for her.\n- ## Work\n  - I had a good meeting with my team.\n  - I had a good meeting with my boss.\n\n\n# date_for_summary\n2024-01-13\n\n\n\nPlease create a morning briefing that includes:\n1. A respectful greeting.\n2. An overview of the day\'s appointments, starting slowly for the user who just woke up.\n3. Detailed presentation of appointments from both calendars, including times, locations, and notes.\n4. Explanation of any appointment collisions and the time available between appointments.\n5. A concise summary of the diary entries, highlighting the core ideas but not going into too much detail.\n\nDon\'t give any ratings, for example "examples, which could be handy for future reference" instead of "examples, which sould be very handy for your future work". Also, do not claim that something should be helpful for the user\'s work, but say that something could be helpful.\n\n# Example for your answer\nGood morning, John! I hope you\'re feeling refreshed. Let\'s look at your schedule for today:\n\nYou have a work appointment at the office this morning and again this afternoon. Between these appointments, you are in town at lunchtime to see a doctor, but there is a time window of two and one hour respectively between the appointments for the journey.\n\nIn detail, your professional Appointments:\n- You have a Team Meeting from 09:00 to 10:00 at the Office in Room 402. Remember, the focus is on discussing quarterly goals, as you noted on the date.\n- Later, there\'s a Client Call scheduled from 14:00 to 15:00. It\'s a virtual meeting to review the project timeline.\n\nAnd the private Appointments:\n- Also, you have a Dentist appointment at the Downtown Clinic from 12:00 to 13:00 for a routine check-up.\n\nNo overlapping appointments today, which is great! You have ample time between each.\n\nFrom your diary entries, I noticed you\'ve been learning about for loops in Python. You\'ve made some  progress with the examples. It\'s all in your notes for a quick review.\n\nThat\'s all for your briefing. Have a productive and smooth day!\n\n# Another example for your answer\nHello, Michael! It\'s time to start your day. Here\'s your agenda, but let\'s start with a brief overview.\n\nYou got 2 professional and 2 private appointments today: A meeting in the office is followed by a private one, folowed by another professional meeting and your day ends with another private appointment. There is free time between these dates, which you can also use for arrival and departure.\n\nIn your professional Calendar is\n- First up, your Team Meeting at the Office, Room 402, from 09:00 to 10:00. The agenda includes discussing quarterly goals.\n- Don\'t forget the Client Call from 14:00 to 15:00. It\'s online, focusing on the project timeline.\n\nAnd in the private one:\n- You have guitar lessons at Jeff\'s. It takes place downtown\n- And in the evening, from 19:00 to 22:00, you\'ll meet Anna at Luigies. Remember to bring flowers, as noted.\n\nLooks like you have a well-spaced schedule today, with no clashes between appointments.\n\nRegarding your diary, I see that yesterday you worked on understanding for loops in Python. You\'ve noted down some key points and source code examples, which could be handy for future reference.\n\nWishing you a fantastic day ahead with your tasks!\n\n\nLet\'s go! Formulate a moring briefing for the provided user and user data.\n'}], 'model': 'gpt-4', 'temperature': 0.1}}
2024-01-13 17:14:23,910 - httpcore.connection - DEBUG - JK - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-01-13 17:14:23,967 - httpcore.connection - DEBUG - JK - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000026656590550>
2024-01-13 17:14:23,967 - httpcore.connection - DEBUG - JK - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000266565366C0> server_hostname='api.openai.com' timeout=5.0
2024-01-13 17:14:23,984 - httpcore.connection - DEBUG - JK - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000026656590520>
2024-01-13 17:14:23,984 - httpcore.http11 - DEBUG - JK - send_request_headers.started request=<Request [b'POST']>
2024-01-13 17:14:23,985 - httpcore.http11 - DEBUG - JK - send_request_headers.complete
2024-01-13 17:14:23,985 - httpcore.http11 - DEBUG - JK - send_request_body.started request=<Request [b'POST']>
2024-01-13 17:14:23,985 - httpcore.http11 - DEBUG - JK - send_request_body.complete
2024-01-13 17:14:23,985 - httpcore.http11 - DEBUG - JK - receive_response_headers.started request=<Request [b'POST']>
2024-01-13 17:14:35,687 - httpcore.http11 - DEBUG - JK - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 13 Jan 2024 16:14:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-4-0613'), (b'openai-organization', b'user-jgbodxbnwzwjnova0pidckzt'), (b'openai-processing-ms', b'11502'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'38987'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'1.519s'), (b'x-request-id', b'69f41df80d3124f4fc9c43f8e6775059'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=lZB4zTSoCxtJagFp0ytkrpcoydwzElKiT8vEL8ri3Vo-1705162477-1-AUpzqXDAsM5sXtaksnezad9hhp23fAfj4Ui6iICvhg/xN+3nemKJ8sqAlrmVOlpISJlQ7DxC/HwTjLuEL/lQXAE=; path=/; expires=Sat, 13-Jan-24 16:44:37 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=CR0i6i1ZW3e2bmy6VDJy_DnCp61q3cZBbVzBudGzNBQ-1705162477908-0-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'844eeea5eba8bbb5-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-01-13 17:14:35,688 - httpx - INFO - JK - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-01-13 17:14:35,688 - httpcore.http11 - DEBUG - JK - receive_response_body.started request=<Request [b'POST']>
2024-01-13 17:14:35,688 - httpcore.http11 - DEBUG - JK - receive_response_body.complete
2024-01-13 17:14:35,688 - httpcore.http11 - DEBUG - JK - response_closed.started
2024-01-13 17:14:35,688 - httpcore.http11 - DEBUG - JK - response_closed.complete
2024-01-13 17:14:35,688 - openai._base_client - DEBUG - JK - HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
2024-01-13 17:14:35,689 - methods.openai_functions - INFO - JK - Token usage: gpt-4-0613, CompletionUsage(completion_tokens=323, prompt_tokens=935, total_tokens=1258)
2024-01-13 19:45:29,729 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 19:45:29,731 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 19:49:54,892 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 19:49:54,906 - httpx - DEBUG - JK - load_verify_locations cafile='C:\\Users\\johan\\.conda\\envs\\ds\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 19:54:10,658 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 19:54:10,659 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 19:55:53,591 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 19:55:53,593 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 19:58:42,002 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 19:58:42,003 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 20:10:11,844 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-13 20:10:11,845 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-13 20:18:56,431 - openai._base_client - DEBUG - JK - Request options: {'method': 'post', 'url': '/audio/speech', 'files': None, 'json_data': {'input': "Good morning, Max! I hope you're feeling well-rested and ready for the day. Let's ease into your schedule for today:\n\nYou have a mix of professional and personal appointments today. Your day starts with a work meeting, followed by a personal appointment, and then a professional lunch. There's ample time between these appointments for travel and preparation.\n\nLet's delve into the details:\n\nIn your professional calendar:\n- Your day begins with a Scrum meeting on Teams from 09:00 to 09:30. This is a good opportunity to align with your team and plan the day's work.\n- Later in the day, you have a lunch with the CEO at the canteen. This is scheduled from 13:00 to 18:00. It's a long window, so it might be a good idea to confirm the exact timing.\n\nIn your personal calendar:\n- You have a doctor's appointment at the Castra Regina Center from 16:00 to 17:30. Remember to carry any necessary documents or reports with you.\n\nThere are no overlapping appointments today, which is great! You have a good amount of time between each appointment to prepare and travel.\n\nLooking at your notes from the previous days, I see that you had a good sleep and a positive conversation with your mother about window cleaning robots. It seems like you're considering buying one for her. On the work front, you had productive meetings with your team and your boss. These experiences could be helpful for your future interactions.\n\nThat's all for your briefing. Wishing you a smooth and successful day ahead!", 'model': 'tts-1', 'voice': 'alloy'}}
2024-01-13 20:18:56,432 - httpcore.connection - DEBUG - JK - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-01-13 20:18:56,475 - httpcore.connection - DEBUG - JK - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000025EF3F2B9D0>
2024-01-13 20:18:56,475 - httpcore.connection - DEBUG - JK - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000025EF5BA9840> server_hostname='api.openai.com' timeout=5.0
2024-01-13 20:18:56,503 - httpcore.connection - DEBUG - JK - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000025EF3ED7B50>
2024-01-13 20:18:56,503 - httpcore.http11 - DEBUG - JK - send_request_headers.started request=<Request [b'POST']>
2024-01-13 20:18:56,504 - httpcore.http11 - DEBUG - JK - send_request_headers.complete
2024-01-13 20:18:56,504 - httpcore.http11 - DEBUG - JK - send_request_body.started request=<Request [b'POST']>
2024-01-13 20:18:56,504 - httpcore.http11 - DEBUG - JK - send_request_body.complete
2024-01-13 20:18:56,504 - httpcore.http11 - DEBUG - JK - receive_response_headers.started request=<Request [b'POST']>
2024-01-13 20:18:57,728 - httpcore.http11 - DEBUG - JK - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 13 Jan 2024 19:18:57 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-organization', b'user-jgbodxbnwzwjnova0pidckzt'), (b'openai-processing-ms', b'935'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'50'), (b'x-ratelimit-remaining-requests', b'49'), (b'x-ratelimit-reset-requests', b'1.2s'), (b'x-request-id', b'b5bc944d3eff697aa8e548cf07c1ed76'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=V0bAfNRgT_JfSRFvqTqrc19XmL6f7ygMZ429YTQxFh8-1705173537-1-AVYEsdrMVDuI966ltvFgVls3DHyfO1AD6gWz5IgoRKR639fDbdjjNXYxz3HufHCI7nZwMacvPCng5qYP3Sn8e4g=; path=/; expires=Sat, 13-Jan-24 19:48:57 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=_liqB0y6PNGrQ4uwahQ3c6k88.98CvbtJeEB5MeA9_o-1705173537594-0-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'844ffcea6e60997a-FRA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-01-13 20:18:57,729 - httpx - INFO - JK - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-01-13 20:18:57,729 - httpcore.http11 - DEBUG - JK - receive_response_body.started request=<Request [b'POST']>
2024-01-13 20:19:14,989 - httpcore.http11 - DEBUG - JK - receive_response_body.complete
2024-01-13 20:19:14,989 - httpcore.http11 - DEBUG - JK - response_closed.started
2024-01-13 20:19:14,989 - httpcore.http11 - DEBUG - JK - response_closed.complete
2024-01-13 20:19:14,990 - openai._base_client - DEBUG - JK - HTTP Request: POST https://api.openai.com/v1/audio/speech "200 OK"
2024-01-14 09:01:53,681 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-14 09:01:53,683 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-14 09:01:53,694 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-14 09:01:53,695 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-14 09:01:53,716 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-14 09:01:53,717 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-14 09:02:39,353 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-14 09:02:39,353 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-14 09:02:39,365 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-14 09:02:39,365 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-14 09:02:39,381 - openai._base_client - DEBUG - JK - Request options: {'method': 'post', 'url': '/audio/speech', 'files': None, 'json_data': {'input': "Good morning, Max! I hope you're feeling well-rested and ready for the day. Let's ease into your schedule for today:\n\nYou have a mix of professional and personal appointments today. Your day starts with a work meeting, followed by a personal appointment, and then a professional lunch. There's ample time between these appointments for travel and preparation.\n\nLet's delve into the details:\n\nIn your professional calendar:\n- Your day begins with a Scrum meeting on Teams from 09:00 to 09:30. This is a good opportunity to align with your team and plan the day's work.\n- Later in the day, you have a lunch with the CEO at the canteen. This is scheduled from 13:00 to 18:00. It's a long window, so it might be a good idea to confirm the exact timing.\n\nIn your personal calendar:\n- You have a doctor's appointment at the Castra Regina Center from 16:00 to 17:30. Remember to carry any necessary documents or reports with you.\n\nThere are no overlapping appointments today, which is great! You have a good amount of time between each appointment to prepare and travel.\n\nLooking at your notes from the previous days, I see that you had a good sleep and a positive conversation with your mother about window cleaning robots. It seems like you're considering buying one for her. On the work front, you had productive meetings with your team and your boss. These experiences could be helpful for your future interactions.\n\nThat's all for your briefing. Wishing you a smooth and successful day ahead!", 'model': 'tts-1', 'voice': 'alloy'}}
2024-01-14 09:02:39,382 - httpcore.connection - DEBUG - JK - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-01-14 09:02:39,416 - httpcore.connection - DEBUG - JK - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002243CE6FE80>
2024-01-14 09:02:39,416 - httpcore.connection - DEBUG - JK - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002243CE288C0> server_hostname='api.openai.com' timeout=5.0
2024-01-14 09:02:39,440 - httpcore.connection - DEBUG - JK - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002243CE6F580>
2024-01-14 09:02:39,440 - httpcore.http11 - DEBUG - JK - send_request_headers.started request=<Request [b'POST']>
2024-01-14 09:02:39,440 - httpcore.http11 - DEBUG - JK - send_request_headers.complete
2024-01-14 09:02:39,441 - httpcore.http11 - DEBUG - JK - send_request_body.started request=<Request [b'POST']>
2024-01-14 09:02:39,441 - httpcore.http11 - DEBUG - JK - send_request_body.complete
2024-01-14 09:02:39,441 - httpcore.http11 - DEBUG - JK - receive_response_headers.started request=<Request [b'POST']>
2024-01-14 09:02:40,576 - httpcore.http11 - DEBUG - JK - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 14 Jan 2024 08:02:39 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-organization', b'user-jgbodxbnwzwjnova0pidckzt'), (b'openai-processing-ms', b'948'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'50'), (b'x-ratelimit-remaining-requests', b'49'), (b'x-ratelimit-reset-requests', b'1.2s'), (b'x-request-id', b'481693bfee26aa0e924f7360df94eca4'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=K8v4AGddQzETT5rqjH4aDnnyGIqbTCpG0W9JNod4SWU-1705219359-1-AdTHhkJX8EQfjss+a/6N4bqlDmsp0XmPQsDoekTjEy8Cg6ElcJX0aIPiLjV2BbroGs3DTNsw2AU5oaDNoXDaWko=; path=/; expires=Sun, 14-Jan-24 08:32:39 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=zcbTAanMLl3DjIaG1Ntr.4zNrg.xRnPa7GD48I7cUUc-1705219359124-0-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'84545b9b8b563638-FRA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-01-14 09:02:40,577 - httpx - INFO - JK - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-01-14 09:02:40,577 - httpcore.http11 - DEBUG - JK - receive_response_body.started request=<Request [b'POST']>
2024-01-14 09:03:04,953 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-14 09:03:04,966 - httpx - DEBUG - JK - load_verify_locations cafile='C:\\Users\\johan\\.conda\\envs\\ds\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-14 09:03:04,981 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-14 09:03:04,981 - httpx - DEBUG - JK - load_verify_locations cafile='C:\\Users\\johan\\.conda\\envs\\ds\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-14 09:03:05,012 - openai._base_client - DEBUG - JK - Request options: {'method': 'post', 'url': '/audio/speech', 'files': None, 'json_data': {'input': "Good morning, Max! I hope you're feeling well-rested and ready for the day. Let's ease into your schedule for today:\n\nYou have a mix of professional and personal appointments today. Your day starts with a work meeting, followed by a personal appointment, and then a professional lunch. There's ample time between these appointments for travel and preparation.\n\nLet's delve into the details:\n\nIn your professional calendar:\n- Your day begins with a Scrum meeting on Teams from 09:00 to 09:30. This is a good opportunity to align with your team and plan the day's work.\n- Later in the day, you have a lunch with the CEO at the canteen. This is scheduled from 13:00 to 18:00. It's a long window, so it might be a good idea to confirm the exact timing.\n\nIn your personal calendar:\n- You have a doctor's appointment at the Castra Regina Center from 16:00 to 17:30. Remember to carry any necessary documents or reports with you.\n\nThere are no overlapping appointments today, which is great! You have a good amount of time between each appointment to prepare and travel.\n\nLooking at your notes from the previous days, I see that you had a good sleep and a positive conversation with your mother about window cleaning robots. It seems like you're considering buying one for her. On the work front, you had productive meetings with your team and your boss. These experiences could be helpful for your future interactions.\n\nThat's all for your briefing. Wishing you a smooth and successful day ahead!", 'model': 'tts-1', 'voice': 'alloy'}}
2024-01-14 09:03:05,016 - httpcore.connection - DEBUG - JK - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-01-14 09:03:05,042 - httpcore.connection - DEBUG - JK - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000233022A4640>
2024-01-14 09:03:05,042 - httpcore.connection - DEBUG - JK - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000233021FDDC0> server_hostname='api.openai.com' timeout=5.0
2024-01-14 09:03:05,063 - httpcore.connection - DEBUG - JK - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000233022A45B0>
2024-01-14 09:03:05,063 - httpcore.http11 - DEBUG - JK - send_request_headers.started request=<Request [b'POST']>
2024-01-14 09:03:05,065 - httpcore.http11 - DEBUG - JK - send_request_headers.complete
2024-01-14 09:03:05,065 - httpcore.http11 - DEBUG - JK - send_request_body.started request=<Request [b'POST']>
2024-01-14 09:03:05,066 - httpcore.http11 - DEBUG - JK - send_request_body.complete
2024-01-14 09:03:05,066 - httpcore.http11 - DEBUG - JK - receive_response_headers.started request=<Request [b'POST']>
2024-01-14 09:03:06,137 - httpcore.http11 - DEBUG - JK - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 14 Jan 2024 08:03:04 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-organization', b'user-jgbodxbnwzwjnova0pidckzt'), (b'openai-processing-ms', b'861'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'50'), (b'x-ratelimit-remaining-requests', b'49'), (b'x-ratelimit-reset-requests', b'1.2s'), (b'x-request-id', b'238bc089ae70be31a691c2691625bc07'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=j2v3lGXxbAycMG18nF4CzHJw2BGkuemsd1H20rmTMUU-1705219384-1-ATyEvCNAWjkqRBz9bp3BTdJNGVmo8xUNcmJ110wD1LzteAPjSsNIWNme9bLjjnwp+hYwgckouiI1TaWpFA4Z9wk=; path=/; expires=Sun, 14-Jan-24 08:33:04 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=jsQTGW6gthIMXrzq79yZOoazG4_qECE.2yjJI4pKG9M-1705219384682-0-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'84545c3ba8f42c16-FRA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-01-14 09:03:06,141 - httpx - INFO - JK - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-01-14 09:03:06,141 - httpcore.http11 - DEBUG - JK - receive_response_body.started request=<Request [b'POST']>
2024-01-14 09:03:08,628 - httpcore.http11 - DEBUG - JK - receive_response_body.complete
2024-01-14 09:03:08,628 - httpcore.http11 - DEBUG - JK - response_closed.started
2024-01-14 09:03:08,628 - httpcore.http11 - DEBUG - JK - response_closed.complete
2024-01-14 09:03:08,629 - openai._base_client - DEBUG - JK - HTTP Request: POST https://api.openai.com/v1/audio/speech "200 OK"
2024-01-14 09:03:08,668 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-14 09:03:08,669 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-14 09:03:08,686 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-14 09:03:08,686 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-14 09:03:08,700 - openai._base_client - DEBUG - JK - Request options: {'method': 'post', 'url': '/audio/speech', 'files': None, 'json_data': {'input': "Good morning, Max! I hope you're feeling well-rested and ready for the day. Let's ease into your schedule for today:\n\nYou have a mix of professional and personal appointments today. Your day starts with a work meeting, followed by a personal appointment, and then a professional lunch. There's ample time between these appointments for travel and preparation.\n\nLet's delve into the details:\n\nIn your professional calendar:\n- Your day begins with a Scrum meeting on Teams from 09:00 to 09:30. This is a good opportunity to align with your team and plan the day's work.\n- Later in the day, you have a lunch with the CEO at the canteen. This is scheduled from 13:00 to 18:00. It's a long window, so it might be a good idea to confirm the exact timing.\n\nIn your personal calendar:\n- You have a doctor's appointment at the Castra Regina Center from 16:00 to 17:30. Remember to carry any necessary documents or reports with you.\n\nThere are no overlapping appointments today, which is great! You have a good amount of time between each appointment to prepare and travel.\n\nLooking at your notes from the previous days, I see that you had a good sleep and a positive conversation with your mother about window cleaning robots. It seems like you're considering buying one for her. On the work front, you had productive meetings with your team and your boss. These experiences could be helpful for your future interactions.\n\nThat's all for your briefing. Wishing you a smooth and successful day ahead!", 'model': 'tts-1', 'voice': 'alloy'}}
2024-01-14 09:03:08,701 - httpcore.connection - DEBUG - JK - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-01-14 09:03:08,725 - httpcore.connection - DEBUG - JK - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002243CEF0DC0>
2024-01-14 09:03:08,726 - httpcore.connection - DEBUG - JK - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002243CE28D40> server_hostname='api.openai.com' timeout=5.0
2024-01-14 09:03:08,744 - httpcore.connection - DEBUG - JK - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002243CEF0BE0>
2024-01-14 09:03:08,744 - httpcore.http11 - DEBUG - JK - send_request_headers.started request=<Request [b'POST']>
2024-01-14 09:03:08,744 - httpcore.http11 - DEBUG - JK - send_request_headers.complete
2024-01-14 09:03:08,744 - httpcore.http11 - DEBUG - JK - send_request_body.started request=<Request [b'POST']>
2024-01-14 09:03:08,745 - httpcore.http11 - DEBUG - JK - send_request_body.complete
2024-01-14 09:03:08,745 - httpcore.http11 - DEBUG - JK - receive_response_headers.started request=<Request [b'POST']>
2024-01-14 09:03:09,784 - httpcore.http11 - DEBUG - JK - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 14 Jan 2024 08:03:08 GMT'), (b'Content-Type', b'audio/mpeg'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-organization', b'user-jgbodxbnwzwjnova0pidckzt'), (b'openai-processing-ms', b'839'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'50'), (b'x-ratelimit-remaining-requests', b'49'), (b'x-ratelimit-reset-requests', b'1.2s'), (b'x-request-id', b'3aa19a6bdb2d635b0690888666d37e59'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=sKov9F6GfSBGusk57VKMW.QXr33dq.d6WlHhjXj.7F0-1705219388-1-AWaLdtNXQYg8OBxPT+/+Q4g9YAPGKMlimb41LfqxI3E7e9GEGyOND3DZrtiv3pURIvYEMxq0oNqolCxrpPN1sjU=; path=/; expires=Sun, 14-Jan-24 08:33:08 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=j.p1PuNTNgwlPbM8Iv4YoXK8oWpWyxdC7aKbET8MlXk-1705219388331-0-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'84545c52afa837ec-FRA'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-01-14 09:03:09,784 - httpx - INFO - JK - HTTP Request: POST https://api.openai.com/v1/audio/speech "HTTP/1.1 200 OK"
2024-01-14 09:03:09,784 - httpcore.http11 - DEBUG - JK - receive_response_body.started request=<Request [b'POST']>
2024-01-14 09:03:19,796 - httpcore.http11 - DEBUG - JK - receive_response_body.complete
2024-01-14 09:03:19,796 - httpcore.http11 - DEBUG - JK - response_closed.started
2024-01-14 09:03:19,796 - httpcore.http11 - DEBUG - JK - response_closed.complete
2024-01-14 09:03:19,797 - openai._base_client - DEBUG - JK - HTTP Request: POST https://api.openai.com/v1/audio/speech "200 OK"
2024-01-14 09:03:27,057 - httpcore.http11 - DEBUG - JK - receive_response_body.complete
2024-01-14 09:03:27,057 - httpcore.http11 - DEBUG - JK - response_closed.started
2024-01-14 09:03:27,058 - httpcore.http11 - DEBUG - JK - response_closed.complete
2024-01-14 09:03:27,058 - openai._base_client - DEBUG - JK - HTTP Request: POST https://api.openai.com/v1/audio/speech "200 OK"
2024-01-14 09:40:32,102 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-14 09:40:32,115 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
2024-01-14 09:40:32,127 - httpx - DEBUG - JK - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-01-14 09:40:32,127 - httpx - DEBUG - JK - load_verify_locations cafile='c:\\Users\\johan\\.conda\\envs\\settlement_service_charges_vivien\\lib\\site-packages\\certifi\\cacert.pem'
